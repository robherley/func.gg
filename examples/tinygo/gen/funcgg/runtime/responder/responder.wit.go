// Code generated by wit-bindgen-go. DO NOT EDIT.

// Package responder represents the imported interface "funcgg:runtime/responder@0.1.0".
//
// interface http {
// type status = u32;
// type headers = list<tuple<string, string>>;
// // streams
// type body = list<u8>;
// record request {
// method: string,
// uri: string,
// headers: headers,
// body: body,
// }
// record response {
// status: status,
// headers: headers,
// body: body,
// }
// }
// interface fetcher {
// use http.{request, response};
// variant fetch-error {
// other(string),
// }
// fetch: func(req: request) -> result<response, fetch-error>;
// }
package responder

import (
	"go.bytecodealliance.org/cm"
)

// SetHeader represents the imported function "set-header".
//
//	set-header: func(k: string, v: string)
//
//go:nosplit
func SetHeader(k string, v string) {
	k0, k1 := cm.LowerString(k)
	v0, v1 := cm.LowerString(v)
	wasmimport_SetHeader((*uint8)(k0), (uint32)(k1), (*uint8)(v0), (uint32)(v1))
	return
}

// SetStatus represents the imported function "set-status".
//
//	set-status: func(status: u16)
//
//go:nosplit
func SetStatus(status uint16) {
	status0 := (uint32)(status)
	wasmimport_SetStatus((uint32)(status0))
	return
}
