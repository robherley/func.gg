package funcgg:runtime@0.1.0;

// interface http {
//   type status = u32;
//   type headers = list<tuple<string, string>>;
//   // streams
//   type body = list<u8>;

//   record request {
//     method: string,
//     uri: string,
//     headers: headers,
//     body: body,
//   }

//   record response {
//     status: status,
//     headers: headers,
//     body: body,
//   }
// }

// interface fetcher {
  // use http.{request, response};

  // variant fetch-error {
  //   other(string),
  // }

  // fetch: func(req: request) -> result<response, fetch-error>;
// }

interface responder {
  set-header: func(k: string, v: string);
  set-status: func(status: u16);
}

world run {
  // include wasi:cli/imports@0.2.3;
  // import fetcher;
  import responder;
}
